%% No4_grid_rotate.m
% NSE
% Maps data onto grid and rotates velocities from reference line theta.

% Deliverables: 
% BI_adcp_L#_mmddyy_cropped_grid_rotate.mat: cross, along, projected
% distance (of data point from the start of reference line), and distance
% offset (of data point from the reference line).

%% choose line: MANUAL
% line = 1;
% line = 2;
line = 3;
% line = 4;

%% choose date: MANUAL
date= "042023";
% date= "062823";
% date= "071323";
% date= "031524";
% date= "031824";

%% load correct file
fname= input('Enter the file name for corresponding date/line: ', 's');
load(fname);

%% load reference line

if line== 1
    load BI_reference_line_L1.mat;
end

if line== 2
    load BI_reference_line_L2.mat;
end

if line== 3
    load BI_reference_line_L3.mat;
end

if line== 4
    load BI_reference_line_L4.mat;
end


%% define common grid
% grid lat/lon (not vel data)
a=size(u);
nens = a(2); %number of ensembles

d_ref_east = m_lldist([xo,xw],[yo,yo]);
if xw<xo
    d_ref_east = -1*d_ref_east;
end
d_ref_north = m_lldist([xo,xo],[yo,yw]);
if yw<yo
    d_ref_north = -1*d_ref_north;
end

d_east= zeros(nens,1); 
d_north= zeros(nens,1);
for m=1:nens 
    d_east(m)= m_lldist([xo,lon(m)],[yo,yo]); 
    if lon(m)<xo
        d_east(m)= -1*d_east(m);
    end
    d_north(m)= m_lldist([xo,xo],[yo,lat(m)]);
    if lat(m)<yo
        d_north(m)= -1*d_north(m);
    end
end

%% project lat/lon onto the reference line 
proj_distance = zeros(nens,1);

for m=1:nens
    vec_a = [d_ref_east,d_ref_north];
    vec_b = [d_east(m),d_north(m)];
    proj_distance(m) = dot(vec_a,vec_b)/sqrt(d_ref_east^2+d_ref_north^2);
end

% c= sqrt(d_east^2+d_north^2); 
% b= sqrt(c^2-a^2); %b is the distance away from ref line.
distance_offset= sqrt(sqrt(d_east.^2 + d_north.^2) - proj_distance);

%% add geo rotation: use theta from ref line
xref=[xo,xw];
yref=[yo,yw];
dref= m_lldist(xref,yref); 
[s,a12,a21]=m_idist(xo,yo,xw,yw); 
% theta= mod(450-a12,360); %NOTE: we will use theta from L2 for all 4 lines 
% in BI: 41.8552515665384
theta = 41.8552515665384; % use for L1, L3, L4

cross = u.*cos(pi*theta/180) + v.*sin(pi*theta/180); 
along = -u.*sin(pi*theta/180) + v.*cos(pi*theta/180);

%% check rotation/grid
% figure('color','w')
% scatter(along,cross)
% set(gca,'xlim',[-3,3],'ylim',[-3,3])

%% compare specific points:
figure('color','w')
subplot(1,2,1)
plot(u,v,'k.')
hold on
plot(u(10,1790),v(10,1790),'m.') %
xlabel('Eastward velocity')
ylabel('Northward velocity')
title('Earth coordinates')
set(gca,'xlim',[-3,3],'ylim',[-3,3])
axis square
grid on
subplot(1,2,2)
plot(cross,along,'k.')
hold on
plot(cross(10,1790),along(10,1790),'m.') %
xlabel('Cross Channel velocity')
ylabel('Along Channel velocity')
title('Rotated')
set(gca,'xlim',[-3,3],'ylim',[-3,3])
axis square
grid on

%% save
% save(strcat('BI_','adcp_','L',num2str(line),'_',...
% date,'_cropped_','grid_','rotate','.mat'),'cross','along','proj_distance',...
% 'distance_offset')
